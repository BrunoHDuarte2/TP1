/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabalhotp1.View;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import trabalhotp1.Controller.AcessoBancoDeDados;
import trabalhotp1.Model.Eletrico;
import trabalhotp1.Model.Eletronico;
import trabalhotp1.Model.Equipamento;
import trabalhotp1.Model.Especialidade;
import trabalhotp1.Model.Funcionario;
import trabalhotp1.Model.Manutencao;
import trabalhotp1.Model.Prioridade;
import trabalhotp1.Model.Quimico;
//import trabalhotp1.Controller.AcessoBancoDeDados;

/**
 *
 * @author bhdbr
 */
public class TelaManuntencao extends javax.swing.JFrame {
    private ArrayList<java.awt.Checkbox> checkboxes = new ArrayList();
    private AcessoBancoDeDados bd;
    /**
     * Creates new form TelaManuntencao
     */
    public TelaManuntencao() {
        initComponents();
        try {
            bd = new AcessoBancoDeDados();
        } catch (Exception e){
            
        }
        this.setSize(1037, 540);
        checkboxes.add(id);
        checkboxes.add(data);
        checkboxes.add(prioridade);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        prioCad.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        equiCadList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        funcCadList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panelInfo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        removeFuncList = new javax.swing.JList<>();
        dataEntregaTField = new javax.swing.JTextField();
        prioridadeTField = new javax.swing.JTextField();
        removeFuncButton = new javax.swing.JButton();
        equipEdit = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        addFuncList = new javax.swing.JList<>();
        addFuncButton = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        dataCriacao = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cadastrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        funcCadList = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        equiCadList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        prioCad = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        nomeEquipamento = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        matriculaFunc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        pesquisarFuncio = new javax.swing.JButton();
        pesquisarEqui = new javax.swing.JButton();
        funcAdd = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        prioridade = new java.awt.Checkbox();
        data = new java.awt.Checkbox();
        id = new java.awt.Checkbox();
        pesquisar = new javax.swing.JButton();
        barraPesquisa = new javax.swing.JTextField();
        panelResultado = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaResultado = new javax.swing.JList<>();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelInfo.setAutoscrolls(true);
        panelInfo.setVisible(false);

        jLabel4.setText("Prioridade:");

        jLabel5.setText("Data Entrega:");

        jLabel6.setText("Funcionários:");

        removeFuncList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(removeFuncList);

        dataEntregaTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataEntregaTFieldActionPerformed(evt);
            }
        });

        removeFuncButton.setText("Remover Funcionário");
        removeFuncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFuncButtonActionPerformed(evt);
            }
        });

        equipEdit.setText("Equipamento: ");

        addFuncList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(addFuncList);

        addFuncButton.setText("Adicionar Funcionário");
        addFuncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFuncButtonActionPerformed(evt);
            }
        });

        save.setText("Salvar");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel9.setText("Edite ou Delete a manutenção");

        dataCriacao.setText("Data Criação:");

        deleteButton.setText("Deletar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(227, 227, 227))
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dataCriacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(equipEdit))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dataEntregaTField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prioridadeTField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addFuncButton)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(removeFuncButton, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFuncButton)
                            .addComponent(removeFuncButton)))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addComponent(dataCriacao)
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(dataEntregaTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(prioridadeTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(equipEdit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(deleteButton))
                .addGap(23, 23, 23))
        );

        getContentPane().add(panelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 630, 240));

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        funcCadList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                funcCadListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(funcCadList);

        jScrollPane5.setViewportView(equiCadList);

        jLabel2.setText("Prioridade:");

        prioCad.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Alta", "Media", "Baixa"};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(prioCad);

        jLabel12.setText("Crie uma manutenção.");

        jLabel1.setText("Nome do Equipamento:");

        matriculaFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matriculaFuncActionPerformed(evt);
            }
        });

        jLabel13.setText("Matrícula do Funcionário:");

        pesquisarFuncio.setText("Pesquisar");
        pesquisarFuncio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarFuncioActionPerformed(evt);
            }
        });

        pesquisarEqui.setText("Pesquisar");
        pesquisarEqui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarEquiActionPerformed(evt);
            }
        });

        funcAdd.setText("Funcionários Adicionados:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(nomeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pesquisarEqui)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(matriculaFunc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pesquisarFuncio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(funcAdd)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cadastrar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel1)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pesquisarFuncio, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(matriculaFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pesquisarEqui)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(funcAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(cadastrar)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 970, 230));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 980, 10));

        jLabel11.setText("Pesquise uma manutenção");

        prioridade.setLabel("Prioridade");

        data.setLabel("Data");

        id.setLabel("Identificador");

        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });

        barraPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barraPesquisaActionPerformed(evt);
            }
        });

        panelResultado.setVisible(false);

        listaResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaResultadoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listaResultado);

        javax.swing.GroupLayout panelResultadoLayout = new javax.swing.GroupLayout(panelResultado);
        panelResultado.setLayout(panelResultadoLayout);
        panelResultadoLayout.setHorizontalGroup(
            panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        panelResultadoLayout.setVerticalGroup(
            panelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(barraPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pesquisar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114)
                                .addComponent(prioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addGap(0, 122, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barraPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 420, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        // TODO add your handling code here:
        try {
            int cont=0;
            for(java.awt.Checkbox check : checkboxes){
                if (check.getState()){
                    cont+=1;
                }
            }
            if (cont>1){
                JOptionPane.showMessageDialog(null, "Não podem ser aplicados dois filtros de uma só vez!\nSelecione somente um filtro.", "Status do Checkbox", JOptionPane.INFORMATION_MESSAGE);
            }
            DefaultListModel<String> listModel = new DefaultListModel<>();
            listaResultado.setModel(listModel);
            if (id.getState()){
                bd.filtraPorId(listModel, barraPesquisa.getText());
            }
            if (data.getState()){
                bd.filtraPorData(listModel, barraPesquisa.getText());
            }
            if (prioridade.getState()){
                bd.filtraPorPrioridade(listModel, barraPesquisa.getText());
            }
            if(!prioridade.getState() && !data.getState() && !id.getState()){
                JOptionPane.showMessageDialog(null, "Selecione um filtro\nSelecione somente um filtro.", "Status do Checkbox", JOptionPane.INFORMATION_MESSAGE);
            } else {
                if (listModel.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Não foi possível encontrar esse elemento!", "Erro", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            if (!listModel.isEmpty()){
                panelResultado.setVisible(true);
                listaResultado.setModel(listModel);
                listaResultado.setVisible(false);
                listaResultado.setVisible(true);
            }
        } catch (Exception e){
            // Só não termina a ação
        }
        
    }//GEN-LAST:event_pesquisarActionPerformed

    private void listaResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaResultadoMouseClicked
        // TODO add your handling code here:
        String selectedValue = listaResultado.getSelectedValue();
        // muda as informações do panel de informações para as que representam o objeto selecionado.
        try{
            Manutencao m = bd.pesquisaManutencao(Integer.parseInt(selectedValue)); 
            dataCriacao.setText("Data Criação: "+m.getDataAtualFormat());
            dataEntregaTField.setText(m.getDataEntregaFormat());
            prioridadeTField.setText(String.valueOf(m.getPrioridade()));
            equipEdit.setText("Equipamento: "+(m.getEquipamento().getNome()));
            addFuncList.setListData(bd.getFuncionariosFormat());
            removeFuncList.setListData(m.getFuncionariosFormat());
            
        } catch (Exception e){
            
        }
        panelInfo.setVisible(true);
    }//GEN-LAST:event_listaResultadoMouseClicked

    private void barraPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barraPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barraPesquisaActionPerformed

    private void dataEntregaTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataEntregaTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEntregaTFieldActionPerformed

    private void addFuncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFuncButtonActionPerformed
        // TODO add your handling code here:
        for(String s :addFuncList.getSelectedValuesList()){
            if(listModelContains(removeFuncList.getModel(), s)){
                JOptionPane.showMessageDialog(null, "A pessoa selecionada já faz parte dessa manutenção!", "Erro", JOptionPane.INFORMATION_MESSAGE);
            } else {
               
                DefaultListModel<String> resultado= new DefaultListModel();
                for(int i =0; i<removeFuncList.getModel().getSize(); i++){
                    resultado.add(i, removeFuncList.getModel().getElementAt(i));
                    
                }
                resultado.add(removeFuncList.getModel().getSize(), s);
                removeFuncList.setModel(resultado);
            }
        }
        
    }//GEN-LAST:event_addFuncButtonActionPerformed
    public static boolean listModelContains(ListModel<String> model, String item) {
        for (int i = 0; i < model.getSize(); i++) {
            if (model.getElementAt(i).equals(item)) {
                return true;
            }
        }
        return false;
    }
    private void matriculaFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matriculaFuncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matriculaFuncActionPerformed

    private void pesquisarEquiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarEquiActionPerformed
        try {
            // TODO add your handling code here:
            Equipamento m = bd.pesquisaEquipamento(nomeEquipamento.getText());
            if (m!=null){
                String[] data = {m.getNome()};
                equiCadList.setListData(data);
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível encontrar esse elemento!", "Erro", JOptionPane.INFORMATION_MESSAGE);
           
            }
        } catch (IOException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisarEquiActionPerformed

    private void pesquisarFuncioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarFuncioActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Funcionario m = bd.pesquisaFuncionario(matriculaFunc.getText());
            if (m!=null){
                String[] data = {m.getNome()+"/"+m.getMatricula()};
                funcCadList.setListData(data);
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível encontrar esse elemento!", "Erro", JOptionPane.INFORMATION_MESSAGE);
           
            }
        } catch (IOException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pesquisarFuncioActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        // TODO add your handling code here:    
        if (funcAdd.getText().split(" ").length == 1 || 
            equiCadList.getSelectedValue() == null || 
            prioCad.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Necessário selecionar pelo menos um campo em todas as opções!", "Erro", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                // Funcionários selecionados:
                String[] valoresEscritos = funcAdd.getText().split(" ");
                if (valoresEscritos.length == 3){
                    // {"funcionários","adicionados:", x} -> Somente um funcionário
                    // x tem o formato nome/matr
                    String[] func = valoresEscritos[2].split("/");
                    if (this.validaFuncionario(bd.pesquisaFuncionario(func[1]), bd.pesquisaEquipamento(equiCadList.getSelectedValue()))){
                        bd.criarManutencao(Prioridade.valueOf(prioCad.getSelectedValue().toUpperCase()),
                                    bd.pesquisaFuncionario(func[1]),
                                    bd.pesquisaEquipamento(equiCadList.getSelectedValue()));
                        JOptionPane.showMessageDialog(null, "Cadastrado!", ":)", JOptionPane.INFORMATION_MESSAGE);
                
                    } else {
                        JOptionPane.showMessageDialog(null, "Pelo menos um dos funcionários selecionados teve conter os requisitos para lidar com tal equipamento!"
                                ,"Erro", JOptionPane.INFORMATION_MESSAGE);
                    }
                } if (valoresEscritos.length > 3){
                    // Adicionando mais de um funcionário
                    boolean ok = false;
                    ArrayList<Funcionario> funcionariosAdd = new ArrayList();
                    for (int i = 2; i<valoresEscritos.length; i++){
                        String nomeMatr = String.valueOf(valoresEscritos[i]);
                        String[] funcionario = nomeMatr.split("/");
                        if(validaFuncionario(bd.pesquisaFuncionario(funcionario[1]), bd.pesquisaEquipamento(equiCadList.getSelectedValue()))){
                           ok = true;
                       }
                        funcionariosAdd.add(bd.pesquisaFuncionario(funcionario[1]));
                    }
                    if (ok){
                        bd.criarManutencao(Prioridade.valueOf(prioCad.getSelectedValue().toUpperCase()),
                                    funcionariosAdd,
                                    bd.pesquisaEquipamento(equiCadList.getSelectedValue()));
                        JOptionPane.showMessageDialog(null, "Cadastrado!", ":)", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Pelo menos um dos funcionários selecionados teve conter os requisitos para lidar com tal equipamento!"
                                ,"Erro", JOptionPane.INFORMATION_MESSAGE);
                    
                    }
                }
                if (valoresEscritos.length < 3){
                    JOptionPane.showMessageDialog(null, "É necessário alocar pelo menos um funcionário para essa manutenção!"
                                ,"Erro", JOptionPane.INFORMATION_MESSAGE);
                }
                funcCadList.setModel(new DefaultListModel());
                prioCad.clearSelection();
                equiCadList.setModel(new DefaultListModel());
                nomeEquipamento.setText("");
                matriculaFunc.setText("");
                funcAdd.setText("Funcionários Adicionados:");
                bd.carregarListaManutencoes();
            } catch (IOException ex) {
                Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cadastrarActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            // TODO add your handling code here:
            int index = Integer.parseInt(listaResultado.getSelectedValue());
            bd.deletarManutencao(bd.pesquisaManutencao(index));
         
            JOptionPane.showMessageDialog(null, "Manutenção apagada com sucesso!", ":)", JOptionPane.INFORMATION_MESSAGE);
            listaResultado.setModel(new DefaultListModel());
            dataCriacao.setText("Data Criação:");
            dataEntregaTField.setText(" ");
            prioridadeTField.setText(" ");
            equipEdit.setText("Equipamento: ");
            addFuncList.setModel(new DefaultListModel());
            removeFuncList.setModel(new DefaultListModel());
            panelInfo.setVisible(false);
           
        } catch (IOException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void funcCadListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funcCadListMouseClicked
        // TODO add your handling code here:
        String[] res = funcAdd.getText().split(" ");
        boolean remov = false;
        for (String s : res){
            if (funcCadList.getSelectedValue().equals(s)){
                funcAdd.setText(funcAdd.getText().replaceAll(s, ""));
                remov = true;
            }
        }
        if (!remov){
            funcAdd.setText(funcAdd.getText()+" "+funcCadList.getSelectedValue());
        }
        
    }//GEN-LAST:event_funcCadListMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String selectedValue = listaResultado.getSelectedValue();
        try {
            boolean altera = false;
            Manutencao mAtual = bd.pesquisaManutencao(Integer.parseInt(selectedValue));
            if(!(dataEntregaTField.getText().equals(mAtual))){
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                mAtual.setDataEntrega(sdf.parse(dataEntregaTField.getText()));
                altera = true;
            }
            if(!prioridadeTField.getText().toUpperCase().equals(String.valueOf(mAtual.getPrioridade()))){
                mAtual.setPrioridade(Prioridade.valueOf(prioridadeTField.getText().toUpperCase()));
                altera = true;
            }
            if(!removeFuncList.equals(mAtual.getFuncionariosFormat())){
                ArrayList<Funcionario> f=new ArrayList();
                for (int i = 0; i<removeFuncList.getModel().getSize();i++){
                    String matr = removeFuncList.getModel().getElementAt(i).split("/")[1];
                    f.add(bd.pesquisaFuncionario(matr));
                }
                mAtual.setFuncionarios(f);
                altera = true;
            }
            bd.editaManutencao(Integer.parseInt(selectedValue), mAtual);
            if (altera){
                JOptionPane.showMessageDialog(null, "As Alterações foram salvas!", ":)", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void removeFuncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFuncButtonActionPerformed
        try {
            ListModel todosFuncionarios = removeFuncList.getModel();
            String nomeEquipamento = equipEdit.getText().substring(equipEdit.getText().indexOf(" ") + 1);
            ArrayList<String> funcionarios = new ArrayList();
            for(int i =0; i<todosFuncionarios.getSize();i++){
                funcionarios.add(String.valueOf(todosFuncionarios.getElementAt(i)));
            }
            for (String s : removeFuncList.getSelectedValuesList()){
                funcionarios.remove(s);
            }
            boolean ok = false;
            for (String func: funcionarios){
                Funcionario f = bd.pesquisaFuncionario(func.split("/")[1]);
                if(validaFuncionario(f, bd.pesquisaEquipamento(nomeEquipamento))){
                    ok = true;
                }  
            }
            if(!ok){
                JOptionPane.showMessageDialog(null, "A remoção de algum desses funcionários compromete a sua funcionalidade", "Erro", JOptionPane.INFORMATION_MESSAGE);
            } else {
                ArrayList<Funcionario> removeFunc = new ArrayList();
                for(String nomeMat:funcionarios){
                    removeFunc.add(bd.pesquisaFuncionario(nomeMat.split("/")[1]));
                }
                bd.pesquisaManutencao(Integer.parseInt(listaResultado.getSelectedValue())).removerFuncionario(removeFunc);
                bd.salvarListaManutencoes(bd.getManutencoes());
                DefaultListModel funcAtualizado = new DefaultListModel();
                for (String item : funcionarios) {
                    funcAtualizado.addElement(item);
                }
                removeFuncList.setModel(funcAtualizado);
            }
        } catch (IOException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaManuntencao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeFuncButtonActionPerformed
    public boolean validaFuncionario(Funcionario f, Equipamento e){
        if ((e instanceof Eletronico) && f.getEspecialidade().contains(Especialidade.Eletrônica)) {
            return true;
        }
        if ((e instanceof Eletrico) && f.getEspecialidade().contains(Especialidade.Elétrica)) {
            return true;
        }
        if ((e instanceof Quimico) && f.getEspecialidade().contains(Especialidade.Química)) {
            return true;
        }
        return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManuntencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManuntencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManuntencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManuntencao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaManuntencao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFuncButton;
    private javax.swing.JList<String> addFuncList;
    private javax.swing.JTextField barraPesquisa;
    private javax.swing.JButton cadastrar;
    private java.awt.Checkbox data;
    private javax.swing.JLabel dataCriacao;
    private javax.swing.JTextField dataEntregaTField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JList<String> equiCadList;
    private javax.swing.JLabel equipEdit;
    private javax.swing.JLabel funcAdd;
    private javax.swing.JList<String> funcCadList;
    private java.awt.Checkbox id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> listaResultado;
    private javax.swing.JTextField matriculaFunc;
    private javax.swing.JTextField nomeEquipamento;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelResultado;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton pesquisarEqui;
    private javax.swing.JButton pesquisarFuncio;
    private javax.swing.JList<String> prioCad;
    private java.awt.Checkbox prioridade;
    private javax.swing.JTextField prioridadeTField;
    private javax.swing.JButton removeFuncButton;
    private javax.swing.JList<String> removeFuncList;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
